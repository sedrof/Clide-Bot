name: Deploy Pump.fun Bot to VPS

on:
  push:
    branches:
      - main
      - deploy-pump-bot
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup SSH Key
      env:
        SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
      run: |
        echo "$SSH_PRIVATE_KEY" > private_key
        chmod 600 private_key

    - name: Deploy files
      env:
        USERNAME: ${{ secrets.USERNAME }}
        HOST: ${{ secrets.HOST }}
      run: |
        # Create directories on remote
        ssh -i private_key -o StrictHostKeyChecking=no $USERNAME@$HOST "mkdir -p /home/azureuser/pump-bot/{config,logs,deployment}"
        
        # Deploy all files
        rsync -avz --exclude='venv' --exclude='__pycache__' --exclude='.git' --exclude='*.pyc' --exclude='.env' \
          -e "ssh -i private_key -o StrictHostKeyChecking=no" \
          ./* $USERNAME@$HOST:/home/azureuser/pump-bot/

    - name: Create environment file
      env:
        TELEGRAM_BOT_TOKEN: ${{ secrets.TELEGRAM_BOT_TOKEN }}
        TELEGRAM_AUTHORIZED_USERS: ${{ secrets.TELEGRAM_AUTHORIZED_USERS }}
        DRPC_API_KEY: ${{ secrets.DRPC_API_KEY }}
        USERNAME: ${{ secrets.USERNAME }}
        HOST: ${{ secrets.HOST }}
      run: |
        echo "TELEGRAM_BOT_TOKEN=${TELEGRAM_BOT_TOKEN}" > .env
        echo "TELEGRAM_AUTHORIZED_USERS=${TELEGRAM_AUTHORIZED_USERS}" >> .env
        echo "DRPC_API_KEY=${DRPC_API_KEY}" >> .env
        echo "WEB_MONITOR_PORT=8889" >> .env
        
        # Copy env file
        scp -i private_key -o StrictHostKeyChecking=no .env $USERNAME@$HOST:/home/azureuser/pump-bot/.env

    - name: Install dependencies and start services
      env:
        USERNAME: ${{ secrets.USERNAME }}
        HOST: ${{ secrets.HOST }}
      run: |
        # Make scripts executable and run them
        ssh -i private_key -o StrictHostKeyChecking=no $USERNAME@$HOST "cd /home/azureuser/pump-bot && chmod +x deployment/*.sh && bash deployment/deploy.sh && bash deployment/start_services.sh"

    - name: Check deployment status
      env:
        USERNAME: ${{ secrets.USERNAME }}
        HOST: ${{ secrets.HOST }}
      run: |
        echo "üöÄ Deployment completed!"
        echo "üì± Telegram bot ready for commands"
        echo "üåê Web monitor at http://$HOST:8889"

    - name: Cleanup
      if: always()
      run: rm -f private_key .env